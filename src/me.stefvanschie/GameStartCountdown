package me.stefvanschie;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;

import org.bukkit.Bukkit;
import org.bukkit.Location;
import org.bukkit.World;
import org.bukkit.entity.Player;

public class GameStartCountdown
{
	static String arena = "";
	static int seconds;
	static boolean firstrun = true;
	public static void gamestartcountdown(final String arena)
	{
		if (firstrun == true)
		{
			seconds = BuildingGame.main.config.getInt("waittimer");
		}
		Bukkit.getScheduler().runTaskLater(BuildingGame.main, new Runnable()
		{
			@Override
			public void run()
			{
				firstrun = false;
				if (seconds == 0)
				{
					String subject = "";
					if (BuildingGame.main.config.contains("subjects"))
					{
						List<String> subjects = new ArrayList<String>(); 
						subjects = BuildingGame.main.config.getStringList("subjects");
						Random rndm = new Random();
						int subjectint = rndm.nextInt(subjects.size());
						subject = subjects.get(subjectint);
					}
					int places = 1;
					for (Player pl : BuildingGame.main.players.keySet())
					{
						if (BuildingGame.main.players.get(pl).equals(arena))
						{
							String worldstr = BuildingGame.main.arenas.getString(arena + "." + places + ".world");
							World world = BuildingGame.main.getServer().getWorld(worldstr);
							int x = BuildingGame.main.arenas.getInt(arena + "." + places + ".x");
							int y = BuildingGame.main.arenas.getInt(arena + "." + places + ".y");
							int z = BuildingGame.main.arenas.getInt(arena + "." + places + ".z");
							Location location = new Location(world, x, y, z);
							pl.teleport(location);
							pl.sendMessage(BuildingGame.main.messages.getString("global.prefix").replaceAll("&", "§") + BuildingGame.main.messages.getString("gameStarts.message")
									.replaceAll("&", "§"));
							if (BuildingGame.main.config.contains("subjects"))
							{
								pl.sendMessage(BuildingGame.main.messages.getString("global.prefix").replaceAll("&", "§") + BuildingGame.main.messages.getString("gameStarts.subject")
										.replace("%subject%", subject)
										.replaceAll("&", "§"));
							}
							BuildingGame.main.playernumbers.put(places, pl);
							places++;
						}
					}
					BuildingGame.main.timer(arena);
					firstrun = true;
				}
				else if ((seconds % 15 == 0 && seconds != BuildingGame.main.config.getInt("waittimer") && seconds != 0) || (seconds >= 1 && seconds <= 10))
				{
					for (Player player : BuildingGame.main.players.keySet())
					{
						if (BuildingGame.main.players.get(player).equals(arena))
						{
							player.sendMessage(BuildingGame.main.messages.getString("global.prefix").replaceAll("&", "§") + BuildingGame.main.messages.getString("lobbyCountdown.message")
									.replace("%seconds%", seconds + "")
									.replaceAll("&", "§"));
						}
					}
					seconds--;
					gamestartcountdown(arena);
				}
				else
				{
					seconds--;
					gamestartcountdown(arena);
				}
			}
		}, 20L);
	}
}
